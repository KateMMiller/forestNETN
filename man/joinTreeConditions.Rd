% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/joinTreeConditions.R
\name{joinTreeConditions}
\alias{joinTreeConditions}
\title{joinTreeConditions: compiles live and dead tree conditions}
\usage{
joinTreeConditions(
  park = "all",
  from = 2006,
  to = 2021,
  QAQC = FALSE,
  locType = c("VS", "all"),
  panels = 1:4,
  status = c("all", "active", "live", "dead"),
  speciesType = c("all", "native", "exotic"),
  dist_m = NA,
  ...
)
}
\arguments{
\item{park}{Combine data from all parks or one or more parks at a time. Valid inputs:
\describe{
\item{"all"}{Includes all parks in the network}
\item{"ACAD"}{Acadia NP only}
\item{"MABI"}{Marsh-Billings-Rockefeller NHP only}
\item{"MIMA"}{Minute Man NHP only}
\item{"MORR"}{Morristown NHP only}
\item{"ROVA"}{Roosevelt-Vanderbilt NHS only}
\item{"SAGA"}{Saint-Gaudens NHS only}
\item{"SARA"}{Saratoga NHP only}
\item{"WEFA"}{Weir Farm NHS only}}}

\item{from}{Year to start analysis, ranging from 2006 to current year}

\item{to}{Year to stop analysis, ranging from 2006 to current year}

\item{QAQC}{Allows you to remove or include QAQC events.
\describe{
\item{FALSE}{Default. Only returns visits that are not QAQC visits}
\item{TRUE}{Returns all visits, including QAQC visits}}}

\item{locType}{Allows you to only include plots that are part of the GRTS sample design or include all plots,
such as deer exclosures
\describe{
\item{"VS"}{Only include plots that are part of the Vital Signs GRTS sample design}
\item{"all"}{Include all plots, such as plots in deer exclosures or test plots.}}}

\item{panels}{Allows you to select individual panels from 1 to 4. Default is all 4 panels (1:4).
If more than one panel is selected, specify by c(1, 3), for example.}

\item{status}{Filter by live, dead, or all. Acceptable options are:
\describe{
\item{"all"}{Default. Includes all trees with any status, including excluded or missing.}
\item{"active"}{Includes all trees with an active monitoring status, including "DF".}
\item{"live"}{Live trees only}
\item{"dead"}{Dead trees only. Note that prior to 2012, status was not assessed for dead trees and will be NA.}
}}

\item{speciesType}{Allows you to filter on native, exotic or include all species.
\describe{
\item{"all"}{Default. Returns all species.}
\item{"native"}{Returns native species only}
\item{"exotic"}{Returns exotic species only}
}}

\item{dist_m}{Filter trees by a distance that is less than or equal to the specified distance in meters
of the tree to the center of the plot. If no distance is specified, then all trees will be selected. For
example, to select an area of trees that is 100 square meters in area, use a distance of 5.64m.}

\item{...}{Other arguments passed to function.}
}
\value{
returns a wide data frame with one row for each tree visit and tree conditions as columns.
Note that vines in the crown and on the bole return the number of species in each condition. Remaining
conditions are either 0 for absent or 1 for present. Only trees that are actively assessed for status
are returned (e.g., trees with DF and DC status are not returned). If status = 'dead' is specified, only
plots with dead trees are returned. Same goes for live trees, although fewer plots are affected.
Status codes, such as VIN_B, CAVL, CAVS, which were added to the protocol later will return NA for
years they were not assessed, otherwise codes are 0/1. The PM column indicates the tree status is
missing for that visit.
}
\description{
This function compiles tree condition data into a wide format with
one row per tree visit and a column for each foliage condition type. Must run importData first.
Abandoned plots and incomplete visits are excluded from function.
}
\examples{
\dontrun{
importData()
# compile tree condition data for live trees in all parks in cycle 3, excluding QAQC visits
trcond_c3 <- joinTreeConditions(from = 2014, to = 2017, status = 'live', QAQC = FALSE)

# compile tree condition for ROVA in 2019, including QAQC visits for active trees
ROVA_trees <- joinTreeConditions(park = "ROVA", from = 2019, to = 2019, status = 'active',
                                 QAQC = TRUE)
}
}
